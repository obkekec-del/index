<!DOCTYPE html>
<html lang="tr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Google Sheets Dashboard</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }
        
        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            padding: 20px;
        }
        
        .container {
            max-width: 1400px;
            margin: 0 auto;
        }
        
        .header {
            background: white;
            border-radius: 15px;
            padding: 30px;
            margin-bottom: 20px;
            box-shadow: 0 10px 30px rgba(0,0,0,0.2);
        }
        
        h1 {
            color: #667eea;
            margin-bottom: 10px;
            font-size: 32px;
        }
        
        .status {
            display: inline-flex;
            align-items: center;
            gap: 8px;
            padding: 8px 16px;
            background: #10b981;
            color: white;
            border-radius: 20px;
            font-size: 14px;
            font-weight: 600;
        }
        
        .status.loading {
            background: #f59e0b;
        }
        
        .status.error {
            background: #ef4444;
        }
        
        .dot {
            width: 8px;
            height: 8px;
            background: white;
            border-radius: 50%;
            animation: pulse 2s infinite;
        }
        
        @keyframes pulse {
            0%, 100% { opacity: 1; }
            50% { opacity: 0.5; }
        }
        
        .last-update {
            color: #666;
            font-size: 14px;
            margin-top: 10px;
        }
        
        .refresh-btn {
            background: white;
            color: #667eea;
            border: 2px solid #667eea;
            padding: 10px 20px;
            border-radius: 8px;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s;
            margin-top: 10px;
        }
        
        .refresh-btn:hover {
            background: #667eea;
            color: white;
        }
        
        /* Tabs */
        .tabs {
            background: white;
            border-radius: 15px;
            padding: 10px;
            margin-bottom: 20px;
            box-shadow: 0 10px 30px rgba(0,0,0,0.2);
            display: flex;
            gap: 10px;
            overflow-x: auto;
        }
        
        .tab {
            padding: 12px 24px;
            border: none;
            background: transparent;
            color: #666;
            font-weight: 600;
            cursor: pointer;
            border-radius: 8px;
            transition: all 0.3s;
            white-space: nowrap;
        }
        
        .tab:hover {
            background: #f3f4f6;
        }
        
        .tab.active {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
        }
        
        /* Tab Content */
        .tab-content {
            display: none;
        }
        
        .tab-content.active {
            display: block;
        }
        
        /* Cards */
        .cards {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 20px;
            margin-bottom: 20px;
        }
        
        .card {
            background: white;
            border-radius: 15px;
            padding: 25px;
            box-shadow: 0 10px 30px rgba(0,0,0,0.2);
            transition: transform 0.3s, box-shadow 0.3s;
        }
        
        .card:hover {
            transform: translateY(-5px);
            box-shadow: 0 15px 40px rgba(0,0,0,0.3);
        }
        
        .card-title {
            color: #666;
            font-size: 14px;
            font-weight: 600;
            text-transform: uppercase;
            margin-bottom: 10px;
        }
        
        .card-value {
            color: #333;
            font-size: 36px;
            font-weight: bold;
            margin-bottom: 5px;
        }
        
        .card-status {
            display: inline-block;
            padding: 4px 12px;
            border-radius: 12px;
            font-size: 12px;
            font-weight: 600;
        }
        
        .card-status.aktif {
            background: #d1fae5;
            color: #065f46;
        }
        
        .card-status.tamamlandi {
            background: #dbeafe;
            color: #1e40af;
        }
        
        /* Table */
        .table-container {
            background: white;
            border-radius: 15px;
            padding: 30px;
            box-shadow: 0 10px 30px rgba(0,0,0,0.2);
            overflow-x: auto;
        }
        
        .table-title {
            font-size: 24px;
            color: #333;
            margin-bottom: 20px;
            font-weight: 600;
        }
        
        table {
            width: 100%;
            border-collapse: collapse;
        }
        
        table th {
            background: #667eea;
            color: white;
            padding: 15px;
            text-align: left;
            font-weight: 600;
            text-transform: uppercase;
            font-size: 12px;
            letter-spacing: 0.5px;
        }
        
        table td {
            padding: 15px;
            border-bottom: 1px solid #e5e7eb;
            color: #333;
        }
        
        table tr:hover {
            background: #f9fafb;
        }
        
        table tr:last-child td {
            border-bottom: none;
        }
        
        .error-message {
            background: #fee2e2;
            border: 2px solid #ef4444;
            color: #991b1b;
            padding: 20px;
            border-radius: 10px;
            margin-bottom: 20px;
        }
        
        .empty-state {
            text-align: center;
            padding: 60px 20px;
            color: #9ca3af;
        }
        
        .empty-state svg {
            width: 80px;
            height: 80px;
            margin-bottom: 20px;
            opacity: 0.3;
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="header">
            <h1>üìä Google Sheets Dashboard</h1>
            <div style="display: flex; justify-content: space-between; align-items: center; flex-wrap: wrap; gap: 10px;">
                <span class="status" id="status">
                    <span class="dot"></span>
                    <span id="statusText">Baƒülanƒ±yor...</span>
                </span>
                <div>
                    <p class="last-update" id="lastUpdate">Son g√ºncelleme: Hen√ºz yok</p>
                    <button class="refresh-btn" onclick="fetchData()">üîÑ Yenile</button>
                </div>
            </div>
        </div>
        
        <div id="errorContainer"></div>
        
        <!-- Tabs -->
        <div class="tabs">
            <button class="tab active" onclick="switchTab('genel')">üìà Genel Bakƒ±≈ü</button>
            <button class="tab" onclick="switchTab('urunler')">üì¶ √úr√ºnler</button>
            <button class="tab" onclick="switchTab('arge')">üîß Ar-Ge Tadilat ƒ∞stekleri</button>
        </div>
        
        <!-- Genel Bakƒ±≈ü Tab -->
        <div id="genel" class="tab-content active">
            <div class="cards" id="genelCards"></div>
        </div>
        
        <!-- √úr√ºnler Tab -->
        <div id="urunler" class="tab-content">
            <div class="table-container">
                <h2 class="table-title">üì¶ √úr√ºn Listesi</h2>
                <div id="urunlerTable"></div>
            </div>
        </div>
        
        <!-- Ar-Ge Tab -->
        <div id="arge" class="tab-content">
            <div class="table-container">
                <h2 class="table-title">üîß Ar-Ge Tadilat ƒ∞stekleri</h2>
                <div id="argeTable"></div>
            </div>
        </div>
    </div>

    <script>
        // BURAYA KENDI APPS SCRIPT URL'Nƒ∞Zƒ∞ YAPISTIRIN
        const API_URL = 'https://script.google.com/macros/s/AKfycbx3bS9PQHFGDhHcSpPwNCpoAFDDkk6OwaDe31QieYrhR53_PWV5V60HMdshcd8zk1Id/exec';
        
        let dashboardData = {};
        
        function switchTab(tabName) {
            // T√ºm tablarƒ± gizle
            document.querySelectorAll('.tab-content').forEach(content => {
                content.classList.remove('active');
            });
            
            // T√ºm tab butonlarƒ±nƒ± pasif yap
            document.querySelectorAll('.tab').forEach(tab => {
                tab.classList.remove('active');
            });
            
            // Se√ßili tabƒ± g√∂ster
            document.getElementById(tabName).classList.add('active');
            event.target.classList.add('active');
        }
        
        function updateStatus(type, text) {
            const status = document.getElementById('status');
            const statusText = document.getElementById('statusText');
            
            status.className = 'status ' + type;
            statusText.textContent = text;
        }
        
        function showError(message) {
            const errorContainer = document.getElementById('errorContainer');
            errorContainer.innerHTML = `
                <div class="error-message">
                    <strong>‚ùå Hata:</strong> ${message}
                </div>
            `;
        }
        
        function clearError() {
            document.getElementById('errorContainer').innerHTML = '';
        }
        
        function createCard(title, value, status) {
            const statusClass = (status || '').toLowerCase().replace(/ƒ±/g, 'i').replace(/≈ü/g, 's').replace(/ƒü/g, 'g').replace(/√º/g, 'u').replace(/√∂/g, 'o').replace(/√ß/g, 'c').replace(/ /g, '');
            return `
                <div class="card">
                    <div class="card-title">${title}</div>
                    <div class="card-value">${typeof value === 'number' ? value.toLocaleString('tr-TR') : value}</div>
                    ${status ? `<span class="card-status ${statusClass}">${status}</span>` : ''}
                </div>
            `;
        }
        
        function createTable(data, title) {
            if (!data || data.length === 0) {
                return `
                    <div class="empty-state">
                        <svg viewBox="0 0 24 24" fill="none" stroke="currentColor">
                            <path d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                        </svg>
                        <p>Hen√ºz veri yok</p>
                    </div>
                `;
            }
            
            const headers = Object.keys(data[0]);
            
            let html = '<table><thead><tr>';
            headers.forEach(header => {
                html += `<th>${header}</th>`;
            });
            html += '</tr></thead><tbody>';
            
            data.forEach(row => {
                html += '<tr>';
                headers.forEach(header => {
                    html += `<td>${row[header] || ''}</td>`;
                });
                html += '</tr>';
            });
            
            html += '</tbody></table>';
            return html;
        }
        
        async function fetchData() {
            updateStatus('loading', 'Y√ºkleniyor...');
            clearError();
            
            try {
                const response = await fetch(API_URL);
                
                if (!response.ok) {
                    throw new Error('Veri √ßekilemedi (HTTP ' + response.status + ')');
                }
                
                const result = await response.json();
                
                if (!result.success) {
                    throw new Error(result.error || 'Bilinmeyen hata');
                }
                
                dashboardData = result.data;
                
                // Genel kartlarƒ± olu≈ütur
                if (dashboardData.genel && dashboardData.genel.length > 0) {
                    const cardsHtml = dashboardData.genel.map(item => {
                        return createCard(item.isim || item.metrik, item.deger, item.durum);
                    }).join('');
                    document.getElementById('genelCards').innerHTML = cardsHtml;
                }
                
                // √úr√ºnler tablosunu olu≈ütur
                document.getElementById('urunlerTable').innerHTML = createTable(dashboardData.urunler, '√úr√ºnler');
                
                // Ar-Ge tablosunu olu≈ütur
                document.getElementById('argeTable').innerHTML = createTable(dashboardData.arge, 'Ar-Ge');
                
                // Durumu g√ºncelle
                updateStatus('', 'Baƒülƒ± ‚úì');
                document.getElementById('lastUpdate').textContent = 
                    'Son g√ºncelleme: ' + new Date().toLocaleTimeString('tr-TR');
                
            } catch (error) {
                updateStatus('error', 'Baƒülantƒ± Hatasƒ±');
                showError(error.message);
                console.error('Hata:', error);
            }
        }
        
        // Sayfa y√ºklendiƒüinde veriyi √ßek
        fetchData();
        
        // Her 30 saniyede bir otomatik g√ºncelle
        setInterval(fetchData, 30000);
    </script>
</body>
</html>
